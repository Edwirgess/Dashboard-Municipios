leafletOutput("map")
)
)
)
server <- function(input, output) {
output$selectEstadoOutput <- renderUI({
selectInput(inputId = 'estado',
label = "Estado",
choices = c("Todos", estados))
})
pop_mun_estado <- reactive({
estado_sel <- input$estado
if (is.null(estado_sel) || estado_sel == "Todos") {
pop_mun
} else {
filter(pop_mun, estado == input$estado)
}
})
output$popMunDataTable <- renderDataTable(datatable(pop_mun_estado()))
municipios_geo_estado <- reactive({
estado_sel <- input$estado
if (is.null(estado_sel) || estado_sel == "Todos") {
municipios
} else {
filter(municipios, name_state == estado_sel)
}
})
output$map <- renderLeaflet({
municipios <- municipios_geo_estado()
leaflet(municipios) |>
addTiles() |>
addPolygons(
fillColor = ~colorNumeric("viridis", residentes)(residentes),
weight = 1,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE
),
label = ~paste(name_muni, "<br>", "Residentes: ", residentes),
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"
)
) |>
addLegend(pal = colorNumeric("viridis", municipios$residentes),
values = municipios$residentes,
title = "População",
opacity = 0.7)
})
}
shinyApp(ui = ui, server = server)
setores_basico <- censobr::read_tracts(2010, dataset = "Basico")
pop_mun <- setores_basico %>%
group_by(estado = name_state, municipio = name_muni) %>%
summarise(
domicilios = as.integer(sum(V001)),
residentes = as.integer(sum(V002))
) %>%
arrange(estado, desc(residentes)) %>%
collect()
estados <- unique(pop_mun$estado) |> sort()
municipios <- read_municipality(year = 2020)
municipios <- municipios %>%
left_join(pop_mun, by = c("name_muni" = "municipio", "abbrev_state" = "estado"))
ui <- fluidPage(
titlePanel("Mapa de População por Município"),
sidebarLayout(
sidebarPanel(
selectInput(inputId = 'estado',
label = "Estado",
choices = c("Todos", estados))
),
mainPanel(
leafletOutput("map")
)
)
)
server <- function(input, output) {
pop_mun_estado <- reactive({
estado_sel <- input$estado
if (is.null(estado_sel) || estado_sel == "Todos") {
pop_mun
} else {
filter(pop_mun, estado == estado_sel)
}
})
municipios_geo_estado <- reactive({
estado_sel <- input$estado
if (is.null(estado_sel) || estado_sel == "Todos") {
municipios
} else {
filter(municipios, name_state == estado_sel)
}
})
output$map <- renderLeaflet({
municipios <- municipios_geo_estado()
leaflet(municipios) %>%
addTiles() %>%
addPolygons(
fillColor = ~colorNumeric("viridis", residentes)(residentes),
weight = 1,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE
),
label = ~paste(name_muni, "<br>", "Residentes: ", residentes),
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"
)
) %>%
addLegend(pal = colorNumeric("viridis", municipios$residentes),
values = municipios$residentes,
title = "População",
opacity = 0.7)
})
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
output$selectEstadoOutput <- renderUI({
selectInput(inputId = 'estado',
label = "Estado",
choices = c("Todos", estados))
})
pop_mun_estado <- reactive({
estado_sel <- input$estado
if (is.null(estado_sel) || estado_sel == "Todos") {
pop_mun
} else {
filter(pop_mun, estado == input$estado)
}
})
output$popMunDataTable <- renderDataTable(datatable(pop_mun_estado()))
municipios_geo_estado <- reactive({
estado_sel <- input$estado
if (is.null(estado_sel) || estado_sel == "Todos") {
municipios
} else {
filter(municipios, name_state == estado_sel)
}
})
output$map <- renderLeaflet({
municipios <- municipios_geo_estado()
leaflet(municipios) |>
addTiles() |>
setView(lng = -93.85, lat = 37.45, zoom = 4)
})
}
shinyApp(ui = ui, server = server)
ui <- navbarPage("Municípios do Brasil", id="main",
tabPanel("Map", leafletOutput("bbmap", height=1000)),
tabPanel("Data", DT::dataTableOutput("popMunDataTable"))
#tabPanel("Read Me",includeMarkdown("readme.md"))
)
server <- function(input, output) {
output$selectEstadoOutput <- renderUI({
selectInput(inputId = 'estado',
label = "Estado",
choices = c("Todos", estados))
})
pop_mun_estado <- reactive({
estado_sel <- input$estado
if (is.null(estado_sel) || estado_sel == "Todos") {
pop_mun
} else {
filter(pop_mun, estado == input$estado)
}
})
output$popMunDataTable <- renderDataTable(datatable(pop_mun_estado()))
municipios_geo_estado <- reactive({
estado_sel <- input$estado
if (is.null(estado_sel) || estado_sel == "Todos") {
municipios
} else {
filter(municipios, name_state == estado_sel)
}
})
output$map <- renderLeaflet({
municipios <- municipios_geo_estado()
leaflet(pop_mun) |>
addTiles() |>
setView(lng = -93.85, lat = 37.45, zoom = 4)
addEasyButton(easyButton(
icon="fa-crosshairs", title="ME",
onClick=JS("function(btn, map){ map.locate({setView: true}); }")))
})
})
ui <- navbarPage("Municípios do Brasil", id="main",
tabPanel("Map", leafletOutput("bbmap", height=1000)),
tabPanel("Data", DT::dataTableOutput("popMunDataTable"))
#tabPanel("Read Me",includeMarkdown("readme.md"))
)
server <- function(input, output) {
output$selectEstadoOutput <- renderUI({
selectInput(inputId = 'estado',
label = "Estado",
choices = c("Todos", estados))
})
pop_mun_estado <- reactive({
estado_sel <- input$estado
if (is.null(estado_sel) || estado_sel == "Todos") {
pop_mun
} else {
filter(pop_mun, estado == input$estado)
}
})
output$popMunDataTable <- renderDataTable(datatable(pop_mun_estado()))
municipios_geo_estado <- reactive({
estado_sel <- input$estado
if (is.null(estado_sel) || estado_sel == "Todos") {
municipios
} else {
filter(municipios, name_state == estado_sel)
}
})
output$map <- renderLeaflet({
municipios <- municipios_geo_estado()
leaflet(pop_mun) |>
addTiles() |>
setView(lng = -93.85, lat = 37.45, zoom = 4)
addEasyButton(easyButton(
icon="fa-crosshairs", title="ME",
onClick=JS("function(btn, map){ map.locate({setView: true}); }")))
})
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
output$selectEstadoOutput <- renderUI({
selectInput(inputId = 'estado',
label = "Estado",
choices = c("Todos", estados))
})
pop_mun_estado <- reactive({
estado_sel <- input$estado
if (is.null(estado_sel) || estado_sel == "Todos") {
pop_mun
} else {
filter(pop_mun, estado == input$estado)
}
})
output$popMunDataTable <- renderDataTable(datatable(pop_mun_estado()))
municipios_geo_estado <- reactive({
estado_sel <- input$estado
if (is.null(estado_sel) || estado_sel == "Todos") {
municipios
} else {
filter(municipios, name_state == estado_sel)
}
})
output$map <- renderLeaflet({
municipios <- municipios_geo_estado()
leaflet(pop_mun) |>
addTiles() |>
addCircleMarkers(data = pop_mun,
radius = 3, popup = ~as.character(cntnt),
color = ~pal(Category),
stroke = FALSE, fillOpacity = 0.8)|>
setView(lng = -93.85, lat = 37.45, zoom = 4)
addEasyButton(easyButton(
icon="fa-crosshairs", title="ME",
onClick=JS("function(btn, map){ map.locate({setView: true}); }")))
})
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
output$selectEstadoOutput <- renderUI({
selectInput(inputId = 'estado',
label = "Estado",
choices = c("Todos", estados))
})
pop_mun_estado <- reactive({
estado_sel <- input$estado
if (is.null(estado_sel) || estado_sel == "Todos") {
pop_mun
} else {
filter(pop_mun, estado == input$estado)
}
})
output$popMunDataTable <- renderDataTable(datatable(pop_mun_estado()))
municipios_geo_estado <- reactive({
estado_sel <- input$estado
if (is.null(estado_sel) || estado_sel == "Todos") {
municipios
} else {
filter(municipios, name_state == estado_sel)
}
})
output$map <- renderLeaflet({
municipios <- municipios_geo_estado()
leaflet(municipios) |>
addTiles() |>
addCircleMarkers(data = municipios,
radius = 3, popup = ~as.character(cntnt),
color = ~pal(Category),
stroke = FALSE, fillOpacity = 0.8)|>
setView(lng = -93.85, lat = 37.45, zoom = 4)
addEasyButton(easyButton(
icon="fa-crosshairs", title="ME",
onClick=JS("function(btn, map){ map.locate({setView: true}); }")))
})
}
shinyApp(ui = ui, server = server)
ui <- navbarPage("Municípios do Brasil", id="main",
tabPanel("Map", leafletOutput("popMunDataTable", height=1000)),
tabPanel("Data", DT::dataTableOutput("popMunDataTable"))
#tabPanel("Read Me",includeMarkdown("readme.md"))
)
server <- function(input, output) {
output$selectEstadoOutput <- renderUI({
selectInput(inputId = 'estado',
label = "Estado",
choices = c("Todos", estados))
})
pop_mun_estado <- reactive({
estado_sel <- input$estado
if (is.null(estado_sel) || estado_sel == "Todos") {
pop_mun
} else {
filter(pop_mun, estado == input$estado)
}
})
output$popMunDataTable <- renderDataTable(datatable(pop_mun_estado()))
municipios_geo_estado <- reactive({
estado_sel <- input$estado
if (is.null(estado_sel) || estado_sel == "Todos") {
municipios
} else {
filter(municipios, name_state == estado_sel)
}
})
output$map <- renderLeaflet({
municipios <- municipios_geo_estado()
leaflet(municipios) |>
addTiles() |>
addCircleMarkers(data = municipios,
radius = 3, popup = ~as.character(cntnt),
color = ~pal(Category),
stroke = FALSE, fillOpacity = 0.8)|>
addEasyButton(easyButton(
icon="fa-crosshairs", title="ME",
onClick=JS("function(btn, map){ map.locate({setView: true}); }")))
})
}
shinyApp(ui = ui, server = server)
ui <- navbarPage("Municípios do Brasil", id="main",
tabPanel("Map", leafletOutput("selectEstadoOutput", height=1000)),
tabPanel("Data", DT::dataTableOutput("popMunDataTable"))
#tabPanel("Read Me",includeMarkdown("readme.md"))
)
server <- function(input, output) {
output$selectEstadoOutput <- renderUI({
selectInput(inputId = 'estado',
label = "Estado",
choices = c("Todos", estados))
})
pop_mun_estado <- reactive({
estado_sel <- input$estado
if (is.null(estado_sel) || estado_sel == "Todos") {
pop_mun
} else {
filter(pop_mun, estado == input$estado)
}
})
output$popMunDataTable <- renderDataTable(datatable(pop_mun_estado()))
municipios_geo_estado <- reactive({
estado_sel <- input$estado
if (is.null(estado_sel) || estado_sel == "Todos") {
municipios
} else {
filter(municipios, name_state == estado_sel)
}
})
output$map <- renderLeaflet({
municipios <- municipios_geo_estado()
leaflet(municipios) |>
addTiles() |>
addCircleMarkers(data = municipios,
radius = 3, popup = ~as.character(cntnt),
color = ~pal(Category),
stroke = FALSE, fillOpacity = 0.8)|>
addEasyButton(easyButton(
icon="fa-crosshairs", title="ME",
onClick=JS("function(btn, map){ map.locate({setView: true}); }")))
})
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
output$selectEstadoOutput <- renderUI({
selectInput(inputId = 'estado',
label = "Estado",
choices = c("Todos", estados))
})
pop_mun_estado <- reactive({
estado_sel <- input$estado
if (is.null(estado_sel) || estado_sel == "Todos") {
municipios
} else {
filter(municipios, estado == input$estado)
}
})
output$popMunDataTable <- renderDataTable(datatable(pop_mun_estado()))
municipios_geo_estado <- reactive({
estado_sel <- input$estado
if (is.null(estado_sel) || estado_sel == "Todos") {
municipios
} else {
filter(municipios, name_state == estado_sel)
}
})
output$map <- renderLeaflet({
municipios <- municipios_geo_estado()
leaflet(municipios) |>
addTiles() |>
addCircleMarkers(data = municipios,
radius = 3, popup = ~as.character(cntnt),
color = ~pal(Category),
stroke = FALSE, fillOpacity = 0.8)|>
addEasyButton(easyButton(
icon="fa-crosshairs", title="ME",
onClick=JS("function(btn, map){ map.locate({setView: true}); }")))
})
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
output$selectEstadoOutput <- renderUI({
selectInput(inputId = 'estado',
label = "Estado",
choices = c("Todos", estados))
})
pop_mun_estado <- reactive({
estado_sel <- input$estado
if (is.null(estado_sel) || estado_sel == "Todos") {
municipios
} else {
filter(municipios, estado == input$estado)
}
})
output$popMunDataTable <- renderDataTable(datatable(pop_mun_estado()))
municipios_geo_estado <- reactive({
estado_sel <- input$estado
if (is.null(estado_sel) || estado_sel == "Todos") {
municipios
} else {
filter(municipios, name_state == estado_sel)
}
})
output$map <- renderLeaflet({
municipios <- municipios_geo_estado()
leaflet(municipios) |>
addTiles() |>
addCircleMarkers(data = municipios,
radius = 3, popup = ~as.character(cntnt),
color = ~pal(Category),
stroke = FALSE, fillOpacity = 0.8)
})
}
shinyApp(ui = ui, server = server)
ui <- navbarPage("Municípios do Brasil", id="main",
tabPanel("Map", uiOutput("selectEstadoOutput", height=1000)),
tabPanel("Data", DTOutput("popMunDataTable"))
#tabPanel("Read Me",includeMarkdown("readme.md"))
)
server <- function(input, output) {
output$selectEstadoOutput <- renderUI({
selectInput(inputId = 'estado',
label = "Estado",
choices = c("Todos", estados))
})
pop_mun_estado <- reactive({
estado_sel <- input$estado
if (is.null(estado_sel) || estado_sel == "Todos") {
municipios
} else {
filter(municipios, estado == input$estado)
}
})
output$popMunDataTable <- renderDataTable(datatable(pop_mun_estado()))
municipios_geo_estado <- reactive({
estado_sel <- input$estado
if (is.null(estado_sel) || estado_sel == "Todos") {
municipios
} else {
filter(municipios, name_state == estado_sel)
}
})
output$map <- renderLeaflet({
municipios <- municipios_geo_estado()
leaflet(municipios) |>
addTiles() |>
addCircleMarkers(data = municipios,
radius = 3, popup = ~as.character(cntnt),
color = ~pal(Category),
stroke = FALSE, fillOpacity = 0.8)
})
}
shinyApp(ui = ui, server = server)
